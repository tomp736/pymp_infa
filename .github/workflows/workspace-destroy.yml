name: 'Workspace Destroy'

permissions:
  contents: read

jobs:
  destroy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/labrats-work/ops-images/omnibus:latest
    environment: ${{ inputs.ENVIRONMENT }}
    concurrency: 
      group: ${{ inputs.ENVIRONMENT }}
      cancel-in-progress: false      
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Create default.tfvars file
      run: |
        echo "hcloud_token = \"${{ secrets.HCLOUD_TOKEN }}\"" > terraform/default.tfvars
        echo "hcloud_token_dns = \"${{ secrets.HCLOUD_TOKEN_DNS }}\"" > terraform/default.tfvars
        public_keys=$(wget -qO- https://github.com/tomp736.keys | jq -R . | jq -s .)
        echo ${public_keys}
        echo "public_keys = ${public_keys}" >> terraform/default.tfvars
    - 
      name: Apply changes for remote backend
      run: |
        echo "Create default.tfrc file"
        echo "# default.tfrc" > default.tfrc
        echo "credentials \"app.terraform.io\" {" >> default.tfrc
        echo "  token = \"${{ secrets.TFCLOUD_TOKEN }}\"" >> default.tfrc
        echo "}" >> default.tfrc

        echo "Create config.remote.tfbackend"
        echo "# config.remote.tfbackend" > terraform/config.remote.tfbackend
        echo "workspaces { name = \"pymp_${{ inputs.ENVIRONMENT }}\" }" >> terraform/config.remote.tfbackend
        echo "hostname     = \"app.terraform.io\"" >> terraform/config.remote.tfbackend
        echo "organization = \"labrats-work\"" >> terraform/config.remote.tfbackend 

        echo "Create config.remote.tfbackend"
        sed -i 's|local|remote|g' terraform/providers.tf
    - 
      name: Terraform Init
      run: terraform -chdir=terraform init -backend-config=config.remote.tfbackend
      env:
        TF_CLI_CONFIG_FILE: default.tfrc
    - 
      name: Terraform Destroy
      run: |
        eval `ssh-agent`
        echo "${KEYFILE}" | ssh-add -
        terraform -chdir=terraform destroy --var-file=default.tfvars -auto-approve -input=false
      env:
        KEYFILE: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        TF_CLI_CONFIG_FILE: default.tfrc

  # update-environment-status:
  #   needs: destroy
  #   runs-on: ubuntu-latest
  #   steps:
  #   - 
  #     name: Update environment state to inactive.
  #     run: |
  #       # Set the environment state to inactive
  #       curl -X PATCH \
  #         -H "Authorization: Bearer ${{ github.token }}" \
  #         -H "Accept: application/vnd.github+json" \
  #         -d '{"state": "inactive"}' \
  #         https://api.github.com/repos/$GITHUB_REPOSITORY/deployments/$GITHUB_DEPLOYMENT_ID/environments/$GITHUB_ENVIRONMENT

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
        description: Terraform Remote Workspace
        required: true
      TF_MODULES_REF:
        type: string
        description: Terraform Modules Ref
        required: true